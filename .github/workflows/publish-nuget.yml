name: Publish to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  publish-nuget:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get release version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
          else
            VERSION=$(grep -oP '<Version>\K[^<]+' BusyTag.CLI/BusyTag.CLI.csproj)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"

      - name: Update project version
        run: |
          cd BusyTag.CLI
          # Update the version in the project file
          sed -i "s|<Version>.*</Version>|<Version>${{ steps.version.outputs.version }}</Version>|g" BusyTag.CLI.csproj
          
          # Update release notes with release information
          if [ "${{ github.event_name }}" = "release" ]; then
            RELEASE_NOTES="${{ github.event.release.body }}"
            # Escape special characters for XML
            RELEASE_NOTES=$(echo "$RELEASE_NOTES" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g')
            # Update release notes in project file (first 1000 chars to avoid issues)
            RELEASE_NOTES_SHORT=$(echo "$RELEASE_NOTES" | cut -c1-1000)
            sed -i "s|<PackageReleaseNotes>.*</PackageReleaseNotes>|<PackageReleaseNotes>$RELEASE_NOTES_SHORT</PackageReleaseNotes>|g" BusyTag.CLI.csproj
          fi

      - name: Restore dependencies
        run: |
          cd BusyTag.CLI
          dotnet restore

      - name: Build project
        run: |
          cd BusyTag.CLI
          dotnet build -c Release --no-restore

      - name: Run tests
        run: |
          cd BusyTag.CLI
          # Run tests if they exist
          if [ -d "../tests" ] || [ -f "*.Tests.csproj" ]; then
            dotnet test -c Release --no-build --verbosity normal
          else
            echo "No tests found, skipping test execution"
          fi

      - name: Pack NuGet package
        run: |
          cd BusyTag.CLI
          # Pack as .NET tool
          dotnet pack -c Release --no-build -p:BuildForTool=true -o ../nupkg
          
          echo "📦 Generated packages:"
          ls -la ../nupkg/

      - name: Verify package contents
        run: |
          cd nupkg
          for pkg in *.nupkg; do
            echo "📋 Contents of $pkg:"
            unzip -l "$pkg" | head -20
            echo ""
          done

      - name: Publish to NuGet
        run: |
          cd nupkg
          for pkg in *.nupkg; do
            echo "🚀 Publishing $pkg to NuGet..."
            dotnet nuget push "$pkg" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done

      - name: Create job summary
        run: |
          echo "## 📦 NuGet Package Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Package:** BusyTag.CLI" >> $GITHUB_STEP_SUMMARY
          echo "**NuGet URL:** https://www.nuget.org/packages/BusyTag.CLI/${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          cd nupkg
          echo "**Published Packages:**" >> $GITHUB_STEP_SUMMARY
          for pkg in *.nupkg; do
            size=$(stat -f%z "$pkg" 2>/dev/null || stat -c%s "$pkg" 2>/dev/null || echo "unknown")
            echo "- \`$pkg\` ($(numfmt --to=iec $size 2>/dev/null || echo $size bytes))" >> $GITHUB_STEP_SUMMARY
          done

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages-${{ steps.version.outputs.version }}
          path: nupkg/*.nupkg
          retention-days: 30